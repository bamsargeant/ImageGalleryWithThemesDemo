import { Component, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
export class ToggleSwitchComponent {
    constructor() {
        this.checked = false;
        this.onCheck = new EventEmitter();
    }
    changeChecked() {
        this.onCheck.emit(this.checked);
    }
}
ToggleSwitchComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.0.0", ngImport: i0, type: ToggleSwitchComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ToggleSwitchComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.0.0", type: ToggleSwitchComponent, selector: "img-lib-toggle-switch", inputs: { checked: "checked" }, outputs: { onCheck: "onCheck" }, ngImport: i0, template: "<label class=\"switch-wrap\">\n  <input type=\"checkbox\" [(ngModel)]=\"checked\" (change)=\"changeChecked()\"/>\n  <div class=\"switch\"></div>\n</label>\n\n\n<!-- <label class=\"switch-wrap\">\n  <input type=\"checkbox\" />\n  <div class=\"switch\"></div>\n</label> -->", styles: [".switch-wrap{cursor:pointer;background:var(--slide-toggle-background-colour);padding:var(--slide-toggle-padding);width:var(--slide-toggle-width);height:var(--slide-toggle-height);border-radius:calc(var(--slide-toggle-height) / 2)}.switch-wrap input{position:absolute;opacity:0;width:0;height:0}.switch{height:100%;display:grid;grid-template-columns:0fr 1fr 1fr;transition:.2s}.switch:after{content:\"\";border-radius:50%;background:var(--slide-toggle-background-colour-selected);grid-column:2;transition:background .2s}input:checked+.switch{grid-template-columns:1fr 1fr 0fr}\n"], dependencies: [{ kind: "directive", type: i1.CheckboxControlValueAccessor, selector: "input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]" }, { kind: "directive", type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i1.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.0.0", ngImport: i0, type: ToggleSwitchComponent, decorators: [{
            type: Component,
            args: [{ selector: 'img-lib-toggle-switch', template: "<label class=\"switch-wrap\">\n  <input type=\"checkbox\" [(ngModel)]=\"checked\" (change)=\"changeChecked()\"/>\n  <div class=\"switch\"></div>\n</label>\n\n\n<!-- <label class=\"switch-wrap\">\n  <input type=\"checkbox\" />\n  <div class=\"switch\"></div>\n</label> -->", styles: [".switch-wrap{cursor:pointer;background:var(--slide-toggle-background-colour);padding:var(--slide-toggle-padding);width:var(--slide-toggle-width);height:var(--slide-toggle-height);border-radius:calc(var(--slide-toggle-height) / 2)}.switch-wrap input{position:absolute;opacity:0;width:0;height:0}.switch{height:100%;display:grid;grid-template-columns:0fr 1fr 1fr;transition:.2s}.switch:after{content:\"\";border-radius:50%;background:var(--slide-toggle-background-colour-selected);grid-column:2;transition:background .2s}input:checked+.switch{grid-template-columns:1fr 1fr 0fr}\n"] }]
        }], ctorParameters: function () { return []; }, propDecorators: { checked: [{
                type: Input
            }], onCheck: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9nZ2xlLXN3aXRjaC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9pbWFnZS1saWIvc3JjL2xpYi91aS90b2dnbGUtc3dpdGNoL3RvZ2dsZS1zd2l0Y2guY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvaW1hZ2UtbGliL3NyYy9saWIvdWkvdG9nZ2xlLXN3aXRjaC90b2dnbGUtc3dpdGNoLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBVSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7OztBQU8vRSxNQUFNLE9BQU8scUJBQXFCO0lBSWhDO1FBSFMsWUFBTyxHQUFZLEtBQUssQ0FBQztRQUN4QixZQUFPLEdBQTBCLElBQUksWUFBWSxFQUFXLENBQUM7SUFFdkQsQ0FBQztJQUVqQixhQUFhO1FBQ1gsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ2xDLENBQUM7O2tIQVJVLHFCQUFxQjtzR0FBckIscUJBQXFCLDhIQ1BsQyxpUkFTWTsyRkRGQyxxQkFBcUI7a0JBTGpDLFNBQVM7K0JBQ0UsdUJBQXVCOzBFQUt4QixPQUFPO3NCQUFmLEtBQUs7Z0JBQ0ksT0FBTztzQkFBaEIsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT25Jbml0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnaW1nLWxpYi10b2dnbGUtc3dpdGNoJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3RvZ2dsZS1zd2l0Y2guY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi90b2dnbGUtc3dpdGNoLmNvbXBvbmVudC5zY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgVG9nZ2xlU3dpdGNoQ29tcG9uZW50IHtcbiAgQElucHV0KCkgY2hlY2tlZDogYm9vbGVhbiA9IGZhbHNlO1xuICBAT3V0cHV0KCkgb25DaGVjazogRXZlbnRFbWl0dGVyPGJvb2xlYW4+ID0gbmV3IEV2ZW50RW1pdHRlcjxib29sZWFuPigpO1xuXG4gIGNvbnN0cnVjdG9yKCkgeyB9XG5cbiAgY2hhbmdlQ2hlY2tlZCgpIHtcbiAgICB0aGlzLm9uQ2hlY2suZW1pdCh0aGlzLmNoZWNrZWQpO1xuICB9XG59XG4iLCI8bGFiZWwgY2xhc3M9XCJzd2l0Y2gtd3JhcFwiPlxuICA8aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgWyhuZ01vZGVsKV09XCJjaGVja2VkXCIgKGNoYW5nZSk9XCJjaGFuZ2VDaGVja2VkKClcIi8+XG4gIDxkaXYgY2xhc3M9XCJzd2l0Y2hcIj48L2Rpdj5cbjwvbGFiZWw+XG5cblxuPCEtLSA8bGFiZWwgY2xhc3M9XCJzd2l0Y2gtd3JhcFwiPlxuICA8aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgLz5cbiAgPGRpdiBjbGFzcz1cInN3aXRjaFwiPjwvZGl2PlxuPC9sYWJlbD4gLS0+Il19