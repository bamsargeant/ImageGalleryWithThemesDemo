import { Component } from '@angular/core';
import { map } from 'rxjs';
import * as i0 from "@angular/core";
import * as i1 from "../../data-access/image-service.service";
import * as i2 from "@angular/router";
import * as i3 from "@angular/common";
import * as i4 from "../../ui/card/card.component";
export class ViewImageComponent {
    constructor(imageService, router, route) {
        this.imageService = imageService;
        this.router = router;
        this.route = route;
        this.imgSrc = '';
    }
    ngOnInit() {
        this.pageParam = Number(this.route.snapshot.queryParamMap.get('page'));
        this.limitParam = Number(this.route.snapshot.queryParamMap.get('limit'));
        this.loadMoreCounterParam = Number(this.route.snapshot.queryParamMap.get('load'));
        this.imageInfoSubscription$ = this.imageService.imageInfo$.subscribe((result) => {
            this.imageInfo = result;
            this.imgSrc = result?.download_url || '';
        });
    }
    ngOnDestroy() {
        if (this.imageInfoSubscription$) {
            this.imageInfoSubscription$.unsubscribe();
        }
    }
    loadImage() {
        this.imageService.imageInfo$.pipe(map((imageInfoResult) => {
            this.imageInfo = imageInfoResult;
        }));
        if (this.cachedImageInfo && this.cachedImageInfo.id == this.id) {
            this.imageInfo = this.cachedImageInfo;
        }
        else {
            this.imageService.retrieveImageInfo({ id: this.id });
        }
    }
    backToList() {
        this.router.navigate(['/'], {
            queryParams: { page: this.pageParam, limit: this.limitParam, load: this.loadMoreCounterParam },
        });
    }
}
ViewImageComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.0.0", ngImport: i0, type: ViewImageComponent, deps: [{ token: i1.ImageService }, { token: i2.Router }, { token: i2.ActivatedRoute }], target: i0.ɵɵFactoryTarget.Component });
ViewImageComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.0.0", type: ViewImageComponent, selector: "img-lib-view-image", ngImport: i0, template: "<div class=\"container py-3\">\n\n  <div class=\"row row-cols-auto justify-content-center g-3 mb-3\">\n    <div class=\"col-12\">\n        <div class=\"row row-cols-auto justify-content-start g-3\">\n            <div class=\"col\">\n              <button type=\"button\" class=\"btn btn-colour\" (click)=\"backToList()\">Back</button>\n            </div>\n        </div>\n    </div>\n</div>\n\n  <div class=\"row row-cols-auto justify-content-center g-3\">\n    <div class=\"col\">\n      <img-lib-card\n        *ngIf=\"imageInfo\"\n        [path]=\"imgSrc\"\n        [imgInfo]=\"imageInfo\"\n      ></img-lib-card>\n    </div>\n  </div>\n</div>\n", styles: [".btn-colour{color:var(--btn-text-colour);background-color:var(--btn-background-colour)}\n"], dependencies: [{ kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i4.CardComponent, selector: "img-lib-card", inputs: ["path", "alttext", "imgInfo"], outputs: ["click"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.0.0", ngImport: i0, type: ViewImageComponent, decorators: [{
            type: Component,
            args: [{ selector: 'img-lib-view-image', template: "<div class=\"container py-3\">\n\n  <div class=\"row row-cols-auto justify-content-center g-3 mb-3\">\n    <div class=\"col-12\">\n        <div class=\"row row-cols-auto justify-content-start g-3\">\n            <div class=\"col\">\n              <button type=\"button\" class=\"btn btn-colour\" (click)=\"backToList()\">Back</button>\n            </div>\n        </div>\n    </div>\n</div>\n\n  <div class=\"row row-cols-auto justify-content-center g-3\">\n    <div class=\"col\">\n      <img-lib-card\n        *ngIf=\"imageInfo\"\n        [path]=\"imgSrc\"\n        [imgInfo]=\"imageInfo\"\n      ></img-lib-card>\n    </div>\n  </div>\n</div>\n", styles: [".btn-colour{color:var(--btn-text-colour);background-color:var(--btn-background-colour)}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.ImageService }, { type: i2.Router }, { type: i2.ActivatedRoute }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmlldy1pbWFnZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9pbWFnZS1saWIvc3JjL2xpYi9mZWF0dXJlL3ZpZXctaW1hZ2Uvdmlldy1pbWFnZS5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9pbWFnZS1saWIvc3JjL2xpYi9mZWF0dXJlL3ZpZXctaW1hZ2Uvdmlldy1pbWFnZS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFxQixNQUFNLGVBQWUsQ0FBQztBQUU3RCxPQUFPLEVBQUUsR0FBRyxFQUEyQixNQUFNLE1BQU0sQ0FBQzs7Ozs7O0FBU3BELE1BQU0sT0FBTyxrQkFBa0I7SUFZN0IsWUFDVSxZQUEwQixFQUMxQixNQUFjLEVBQ2QsS0FBcUI7UUFGckIsaUJBQVksR0FBWixZQUFZLENBQWM7UUFDMUIsV0FBTSxHQUFOLE1BQU0sQ0FBUTtRQUNkLFVBQUssR0FBTCxLQUFLLENBQWdCO1FBYnhCLFdBQU0sR0FBVyxFQUFFLENBQUM7SUFjeEIsQ0FBQztJQUVKLFFBQVE7UUFDTixJQUFJLENBQUMsU0FBUyxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7UUFDdkUsSUFBSSxDQUFDLFVBQVUsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1FBQ3pFLElBQUksQ0FBQyxvQkFBb0IsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1FBRWxGLElBQUksQ0FBQyxzQkFBc0IsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQ2xFLENBQUMsTUFBTSxFQUFFLEVBQUU7WUFDVCxJQUFJLENBQUMsU0FBUyxHQUFHLE1BQU0sQ0FBQztZQUN4QixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sRUFBRSxZQUFZLElBQUksRUFBRSxDQUFDO1FBQzNDLENBQUMsQ0FDRixDQUFDO0lBQ0osQ0FBQztJQUVELFdBQVc7UUFDVCxJQUFJLElBQUksQ0FBQyxzQkFBc0IsRUFBRTtZQUMvQixJQUFJLENBQUMsc0JBQXNCLENBQUMsV0FBVyxFQUFFLENBQUM7U0FDM0M7SUFDSCxDQUFDO0lBRU0sU0FBUztRQUNkLElBQUksQ0FBQyxZQUFZLENBQUMsVUFBVSxDQUFDLElBQUksQ0FDL0IsR0FBRyxDQUFDLENBQUMsZUFBZSxFQUFFLEVBQUU7WUFDdEIsSUFBSSxDQUFDLFNBQVMsR0FBRyxlQUFlLENBQUM7UUFDbkMsQ0FBQyxDQUFDLENBQ0gsQ0FBQztRQUVGLElBQUksSUFBSSxDQUFDLGVBQWUsSUFBSSxJQUFJLENBQUMsZUFBZSxDQUFDLEVBQUUsSUFBSSxJQUFJLENBQUMsRUFBRSxFQUFFO1lBQzlELElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQztTQUN2QzthQUFNO1lBQ0wsSUFBSSxDQUFDLFlBQVksQ0FBQyxpQkFBaUIsQ0FBQyxFQUFFLEVBQUUsRUFBRSxJQUFJLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztTQUN0RDtJQUNILENBQUM7SUFFTSxVQUFVO1FBQ2YsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxHQUFHLENBQUMsRUFBRTtZQUMxQixXQUFXLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLFNBQVMsRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLFVBQVUsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLG9CQUFvQixFQUFFO1NBQy9GLENBQUMsQ0FBQztJQUNMLENBQUM7OytHQXZEVSxrQkFBa0I7bUdBQWxCLGtCQUFrQiwwRENYL0IseW9CQXNCQTsyRkRYYSxrQkFBa0I7a0JBTDlCLFNBQVM7K0JBQ0Usb0JBQW9CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkRlc3Ryb3ksIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQWN0aXZhdGVkUm91dGUsIFJvdXRlciB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQgeyBtYXAsIFN1YnNjcmlwdGlvbiwgc3dpdGNoTWFwIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBJbWFnZVNlcnZpY2UgfSBmcm9tICcuLi8uLi9kYXRhLWFjY2Vzcy9pbWFnZS1zZXJ2aWNlLnNlcnZpY2UnO1xuaW1wb3J0IHsgSW1hZ2VJbmZvIH0gZnJvbSAnLi4vLi4vbW9kZWxzL2ltYWdlLWluZm8ubW9kZWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdpbWctbGliLXZpZXctaW1hZ2UnLFxuICB0ZW1wbGF0ZVVybDogJy4vdmlldy1pbWFnZS5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3ZpZXctaW1hZ2UuY29tcG9uZW50LnNjc3MnXSxcbn0pXG5leHBvcnQgY2xhc3MgVmlld0ltYWdlQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuICBwdWJsaWMgaW1hZ2VJbmZvOiBJbWFnZUluZm8gfCB1bmRlZmluZWQ7XG4gIHB1YmxpYyBpbWdTcmM6IHN0cmluZyA9ICcnO1xuXG4gIHByaXZhdGUgaWQ6IHN0cmluZyB8IHVuZGVmaW5lZDtcbiAgcHJpdmF0ZSBjYWNoZWRJbWFnZUluZm86IEltYWdlSW5mbyB8IHVuZGVmaW5lZDtcbiAgcHJpdmF0ZSBpbWFnZUluZm9TdWJzY3JpcHRpb24kOiBTdWJzY3JpcHRpb24gfCB1bmRlZmluZWQ7XG5cbiAgcHJpdmF0ZSBwYWdlUGFyYW06IG51bWJlciB8IHVuZGVmaW5lZDtcbiAgcHJpdmF0ZSBsaW1pdFBhcmFtOiBudW1iZXIgfCB1bmRlZmluZWQ7XG4gIHByaXZhdGUgbG9hZE1vcmVDb3VudGVyUGFyYW06IG51bWJlciB8IHVuZGVmaW5lZDtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIGltYWdlU2VydmljZTogSW1hZ2VTZXJ2aWNlLFxuICAgIHByaXZhdGUgcm91dGVyOiBSb3V0ZXIsXG4gICAgcHJpdmF0ZSByb3V0ZTogQWN0aXZhdGVkUm91dGVcbiAgKSB7fVxuXG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIHRoaXMucGFnZVBhcmFtID0gTnVtYmVyKHRoaXMucm91dGUuc25hcHNob3QucXVlcnlQYXJhbU1hcC5nZXQoJ3BhZ2UnKSk7XG4gICAgdGhpcy5saW1pdFBhcmFtID0gTnVtYmVyKHRoaXMucm91dGUuc25hcHNob3QucXVlcnlQYXJhbU1hcC5nZXQoJ2xpbWl0JykpO1xuICAgIHRoaXMubG9hZE1vcmVDb3VudGVyUGFyYW0gPSBOdW1iZXIodGhpcy5yb3V0ZS5zbmFwc2hvdC5xdWVyeVBhcmFtTWFwLmdldCgnbG9hZCcpKTtcblxuICAgIHRoaXMuaW1hZ2VJbmZvU3Vic2NyaXB0aW9uJCA9IHRoaXMuaW1hZ2VTZXJ2aWNlLmltYWdlSW5mbyQuc3Vic2NyaWJlKFxuICAgICAgKHJlc3VsdCkgPT4ge1xuICAgICAgICB0aGlzLmltYWdlSW5mbyA9IHJlc3VsdDtcbiAgICAgICAgdGhpcy5pbWdTcmMgPSByZXN1bHQ/LmRvd25sb2FkX3VybCB8fCAnJztcbiAgICAgIH1cbiAgICApO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gICAgaWYgKHRoaXMuaW1hZ2VJbmZvU3Vic2NyaXB0aW9uJCkge1xuICAgICAgdGhpcy5pbWFnZUluZm9TdWJzY3JpcHRpb24kLnVuc3Vic2NyaWJlKCk7XG4gICAgfVxuICB9XG5cbiAgcHVibGljIGxvYWRJbWFnZSgpIHtcbiAgICB0aGlzLmltYWdlU2VydmljZS5pbWFnZUluZm8kLnBpcGUoXG4gICAgICBtYXAoKGltYWdlSW5mb1Jlc3VsdCkgPT4ge1xuICAgICAgICB0aGlzLmltYWdlSW5mbyA9IGltYWdlSW5mb1Jlc3VsdDtcbiAgICAgIH0pXG4gICAgKTtcblxuICAgIGlmICh0aGlzLmNhY2hlZEltYWdlSW5mbyAmJiB0aGlzLmNhY2hlZEltYWdlSW5mby5pZCA9PSB0aGlzLmlkKSB7XG4gICAgICB0aGlzLmltYWdlSW5mbyA9IHRoaXMuY2FjaGVkSW1hZ2VJbmZvO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmltYWdlU2VydmljZS5yZXRyaWV2ZUltYWdlSW5mbyh7IGlkOiB0aGlzLmlkIH0pO1xuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBiYWNrVG9MaXN0KCkge1xuICAgIHRoaXMucm91dGVyLm5hdmlnYXRlKFsnLyddLCB7XG4gICAgICBxdWVyeVBhcmFtczogeyBwYWdlOiB0aGlzLnBhZ2VQYXJhbSwgbGltaXQ6IHRoaXMubGltaXRQYXJhbSwgbG9hZDogdGhpcy5sb2FkTW9yZUNvdW50ZXJQYXJhbSB9LFxuICAgIH0pO1xuICB9XG59XG4iLCI8ZGl2IGNsYXNzPVwiY29udGFpbmVyIHB5LTNcIj5cblxuICA8ZGl2IGNsYXNzPVwicm93IHJvdy1jb2xzLWF1dG8ganVzdGlmeS1jb250ZW50LWNlbnRlciBnLTMgbWItM1wiPlxuICAgIDxkaXYgY2xhc3M9XCJjb2wtMTJcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cInJvdyByb3ctY29scy1hdXRvIGp1c3RpZnktY29udGVudC1zdGFydCBnLTNcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2xcIj5cbiAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJidG4gYnRuLWNvbG91clwiIChjbGljayk9XCJiYWNrVG9MaXN0KClcIj5CYWNrPC9idXR0b24+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG48L2Rpdj5cblxuICA8ZGl2IGNsYXNzPVwicm93IHJvdy1jb2xzLWF1dG8ganVzdGlmeS1jb250ZW50LWNlbnRlciBnLTNcIj5cbiAgICA8ZGl2IGNsYXNzPVwiY29sXCI+XG4gICAgICA8aW1nLWxpYi1jYXJkXG4gICAgICAgICpuZ0lmPVwiaW1hZ2VJbmZvXCJcbiAgICAgICAgW3BhdGhdPVwiaW1nU3JjXCJcbiAgICAgICAgW2ltZ0luZm9dPVwiaW1hZ2VJbmZvXCJcbiAgICAgID48L2ltZy1saWItY2FyZD5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG48L2Rpdj5cbiJdfQ==